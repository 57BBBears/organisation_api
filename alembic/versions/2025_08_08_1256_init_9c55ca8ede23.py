"""Init

Revision ID: 9c55ca8ede23
Revises:
Create Date: 2025-08-08 12:56:00.359541

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils
from geoalchemy2 import Geometry

# revision identifiers, used by Alembic.
revision: str = "9c55ca8ede23"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "activities",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("parent_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["activities.id"],
            name=op.f("activities_parent_id_fkey"),
            ondelete="cascade",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("activities_pkey")),
    )
    op.create_geospatial_table(
        "buildings",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("address", sa.String(), nullable=False),
        sa.Column(
            "coordinates",
            Geometry(
                geometry_type="POINT",
                srid=4326,
                dimension=2,
                spatial_index=False,
                from_text="ST_GeomFromEWKT",
                name="geometry",
                nullable=False,
            ),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("buildings_pkey")),
    )
    op.create_geospatial_index(
        "idx_buildings_coordinates",
        "buildings",
        ["coordinates"],
        unique=False,
        postgresql_using="gist",
        postgresql_ops={},
    )
    op.create_table(
        "organisations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("building_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["building_id"],
            ["activities.id"],
            name=op.f("organisations_building_id_fkey"),
            ondelete="cascade",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("organisations_pkey")),
    )
    op.create_table(
        "organisations_activities",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("organisation_id", sa.Integer(), nullable=False),
        sa.Column("activity_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["activity_id"],
            ["activities.id"],
            name=op.f("organisations_activities_activity_id_fkey"),
            ondelete="cascade",
        ),
        sa.ForeignKeyConstraint(
            ["organisation_id"],
            ["organisations.id"],
            name=op.f("organisations_activities_organisation_id_fkey"),
            ondelete="cascade",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("organisations_activities_pkey")),
        sa.UniqueConstraint(
            "organisation_id",
            "activity_id",
            name="organisations_activities_organisation_id_activity_id_key",
        ),
    )
    op.create_table(
        "phones",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("organisation_id", sa.Integer(), nullable=False),
        sa.Column(
            "number",
            sqlalchemy_utils.types.phone_number.PhoneNumberType(length=12),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["organisation_id"],
            ["organisations.id"],
            name=op.f("phones_organisation_id_fkey"),
            ondelete="cascade",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("phones_pkey")),
        sa.UniqueConstraint(
            "organisation_id", "number", name="phones_organisation_id_number_key"
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("phones")
    op.drop_table("organisations_activities")
    op.drop_table("organisations")
    op.drop_geospatial_index(
        "idx_buildings_coordinates",
        table_name="buildings",
        postgresql_using="gist",
        column_name="coordinates",
    )
    op.drop_geospatial_table("buildings")
    op.drop_table("activities")
    # ### end Alembic commands ###
